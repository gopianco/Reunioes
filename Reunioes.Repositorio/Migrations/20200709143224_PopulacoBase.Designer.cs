// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Reunioes.Repositorio.Contexto;

namespace Reunioes.Repositorio.Migrations
{
    [DbContext(typeof(ReunioesContexto))]
    [Migration("20200709143224_PopulacoBase")]
    partial class PopulacoBase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Reunioes.Dominio.Entidades.Reuniao", b =>
                {
                    b.Property<int>("ReuniaoId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DataHoraFim");

                    b.Property<DateTime>("DataHoraInicio");

                    b.Property<int>("SalaId");

                    b.Property<string>("Titulo")
                        .IsRequired();

                    b.HasKey("ReuniaoId");

                    b.HasIndex("SalaId");

                    b.ToTable("Reunioes");

                    b.HasData(
                        new
                        {
                            ReuniaoId = 1,
                            DataHoraFim = new DateTime(2020, 7, 9, 17, 20, 0, 0, DateTimeKind.Unspecified),
                            DataHoraInicio = new DateTime(2020, 7, 9, 16, 20, 0, 0, DateTimeKind.Unspecified),
                            SalaId = 1,
                            Titulo = "Reunião Diretoria Financeira"
                        },
                        new
                        {
                            ReuniaoId = 2,
                            DataHoraFim = new DateTime(2020, 7, 9, 17, 20, 0, 0, DateTimeKind.Unspecified),
                            DataHoraInicio = new DateTime(2020, 7, 9, 16, 20, 0, 0, DateTimeKind.Unspecified),
                            SalaId = 2,
                            Titulo = "Reunião Diretoria Financeira"
                        },
                        new
                        {
                            ReuniaoId = 3,
                            DataHoraFim = new DateTime(2020, 7, 10, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            DataHoraInicio = new DateTime(2020, 7, 10, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            SalaId = 1,
                            Titulo = "Reunião Diretoria Financeira"
                        },
                        new
                        {
                            ReuniaoId = 4,
                            DataHoraFim = new DateTime(2020, 7, 10, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DataHoraInicio = new DateTime(2020, 7, 10, 11, 30, 0, 0, DateTimeKind.Unspecified),
                            SalaId = 1,
                            Titulo = "Reunião Diretoria Financeira"
                        });
                });

            modelBuilder.Entity("Reunioes.Dominio.Entidades.Sala", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Salas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Sala 01"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Sala 02"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Sala 03"
                        });
                });

            modelBuilder.Entity("Reunioes.Dominio.Entidades.Reuniao", b =>
                {
                    b.HasOne("Reunioes.Dominio.Entidades.Sala", "Sala")
                        .WithMany("Reunioes")
                        .HasForeignKey("SalaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
